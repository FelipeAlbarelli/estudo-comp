[22-1]
a.1) Dado um grafo não-direcionado G, seja T uma árvore de busca em largura de G. Suponha que x = {v,w} é uma aresta em E(G), com v antecessor de w. Pelas linhas 10-18, toda aresta de v será descoberta antes de v se tornar preto, e v se tornará preto antes que seus descendentes sejam desenfileirados. Portanto, quando x foi descoberta, v era cinza e w estava enfileirado. Se x fosse uma aresta de retorno, x teria sido descoberta após w ser desenfileirado, contradizendo nosso resultado imediatamente anterior. Se x fosse uma aresta direta, então neste momento w era ou preto ou cinza. Se w fosse preto, já haveria sido desenfileirado, o que concluímos não ser o caso. Se w fosse cinza, então w foi descoberto por meio de outra aresta x'. Se x' = {v,w}, teríamos uma aresta repetida, o que não é permitido na definição de grafo. Se x' = {r,w} com r ≠ v, então w foi enfileirado durante a investigação de r, contradizendo a hipótese de que v é antecessor de w. Portanto, x não pode ser nem uma aresta de retorno nem uma aresta direta.
a.2) Dado um grafo não-direcionado G, seja T uma árvore de busca em largura de G. Suponha que x = (v,w) é uma aresta de árvore em T. Portanto, por definição de aresta de árvore, w.π = v. Pelas linhas 15-16, temos que w.d = (w.π).d + 1 = v.d + 1. Em nenhum outro momento posterior o valor de w.d será alterado.
a.3) Dado um grafo não-direcionado G, seja T uma arvore de busca em largura de G. Suponha que x = (v,w) é uma aresta cruzada em T. Como x é uma aresta cruzada, v não é antecessor de w. A corretude da BFS nos garante que ela encontra o caminho mínimo da raíz s da árvore de T até qualquer outro vértice. Como (v,w) é aresta cruzada em T, temos que a aresta {v,w} do grafo não-ordenado foi descoberta. Portanto, existe um caminho de s a v de comprimento v.d. Dado que {v,w} ∈ E(G), o caminho mínimo de s a w não pode ter comprimento maior do que o caminho de s a v adicionado da aresta (v,w), que possui comprimento v.d + 1. Portanto, w.d ≤ v.d + 1. Como temos um grafo não-direcionado, também temos que o caminho mínimo de s a v não pode ser maior do que o caminho mínimo de s a w adicionado da aresta (v,w), que possui comprimento w.d + 1. Portanto, v.d ≤ w.d + 1. Juntando ambas desigualdades, obtemos que v.d - 1 ≤ w.d ≤ v.d + 1. Suponha, para fins de contradição, que v.d - 1 = w.d, ou seja, v.d = w.d + 1. Neste caso, w teria sido explorada antes de v, e terísmo a aresta cruzada (w,v) ao invés de (v,w). Portanto, v.d ≤ w.d ≤ v.d + 1.

b) Seja G um grafo dirigido. Seja BFT o resultado BFS(G, s). Sejam u,v,w ∈ V(G).
1) Seja x = (u,v) ∈ E(G). Suponha, para fins de contradição, que x é aresta direta. Por definição, x não é aresta de árvore, mas u é antepassado de v, de forma que existe u→v. Ademais, como u ∈ V(BFT), existe caminho s→u. Portanto, há um caminho s→v dado por C1 = s→u + u→v em BFT. Como x não é aresta de árvore, v não foi descoberto explorando x. Portanto, há uma outra aresta y = (r,v) ∈ E(G), com r ≠ u, tal que v foi descoberto mediante y, de forma que y é aresta da árvore. Portanto, existe um caminho s→v dado por C2 = s→r + (r,v). Se s→r não contém u, então C2 não contém u. Como C1 contém u, se segue que C1 e C2 são caminhos simples distintos entre s e v em BFT, contradizendo o Teorema B.2. Portanto, s→r contém u, donde se segue que u é ancestral de r. Como u é ancestral de r, se segue que u foi explorado antes de r. Portanto, todas as arestas partindo de u foram exploradas antes de quaisquer arestas partindo de r. Sendo assim, a aresta x = (u,v) foi explorada antes da aresta y = (r,v). Isso contradiz o resultado de que v teria sido descoberto mediante y, obtendo portanto uma contradição.
2) Seja x = (u,v) uma aresta da árvore BFT. Portanto, por definição, v foi descoberto mediante x, enquanto u.Adj estava sendo percorrido. Pelas linhas 14-16 do algorimto, v foi atribuído v.d = u.d + 1. Em nenhum outro momento v.d é alterado.
3) Seja x = (u,v) uma aresta cruzada em BFT. Como u,v ∈ V(BFT), existem caminhos s→u e s→v em BFT, e portanto ambos existem em G. Como (u,v) ∈ E(G), há em G um caminho s→v formado por s→u + (u,v). Pelo Lema 22.1, se segue que δ(s,v) ≤ δ(s,u) + 1. Pela correção de BFT (Teorema 22.5), temos que d.v = δ(s,v) ≤ δ(s,u) + 1 = d.u + 1.
4) Seja x = (u,v) uma aresta de retorno em BFT. Por definição, v é ancestral de u. Provaremos por indução fraca sobre N que u.d = v.d + N – 1, em que N é o número de vértices no caminho v→u.
- Caso base: N = 2. Neste caso, u.π = v, de forma que u.d = v.d + 1 = v.d + N – 1 > v.d.
- Hipótese de indução: N = k. Neste caso, assumimos que u.d = v.d + k - 1.
- Passo indutivo: N = k + 1. Neste caso, tome r = u.π. No caminho v→r, há N = k vértices. Pela hipótese de indução, r.d = v.d + k – 1. Como u.d = r.d + 1, temos que u.d = v.d + k = v.d + N – 1 < v.d, dado que k > 0.

[22-2] Seja G um grafo não-dirigido. Seja Gπ a árvore de busca em profundidade gerada por DFS(G,s).
a) 
- Ida: Gπ é tal que E(Gπ) = s U {(v.π, v) | v ∈ (E(G) – {s})}. Seja s a raíz de Gπ com no mínimo dois filhos, e seja u e v quaisquer par de seus filhos. Portanto, em DFS, temos que u foi descoberta por meio de (s,u) e v foi descoberta por meio de (s,v), visto que (s,u) e (s,v) são arestas da árvore Gπ. Sendo assim, u não é antecessor de v. Portanto, pelo teorema do caminho branco, no momento de descoberta de u não havia um caminho de vértices brancos ligando u até v. Portanto, não existe um ciclo não-dirigido entre u e v. Portanto, todo caminho u→v passa por s. Sendo assim, s é um ponto de articulação de G.
- Volta: Seja s um ponto de articulação de G. Então existem pelo menos dois vértices u e v, havendo duas arestas (s,u) e (s,v), tais que todo caminho u→v passa por s. Portanto, quando u é descoberto, não existe caminho branco entre u e v. Portanto, u não é antecessor de v. Por um raciocínio paralelo, concluímos também que v não é antecessor de u. Portanto, como u e v são sucessores de s, os caminhos s→u e s→v não possuem vértices em comum em Gπ, de forma que s possui pelo menos dois filhos distintos.
b)
- Ida: Suponha que v possui um filho s tal que nenhum descendente de s possui aresta de returno para qualquer ancestral próprio de v. Seja v' um ancestral próprio quaquer de v (forçosamente v' ≠ v). Portanto, não há aresta (s', v'). Sendo assim, todo caminho não-dirigido s'→v' em G passa por v. Portanto, v é um ponto de articulação de G.
- Seja v um ponto de articulação de G. Então existem vértices u e w tais que todos os caminhos u→w passam por v. [...] Portanto, v é ancestral pelo menos de um dentre u e w. Sem perda de generalidade, seja v ancestral de u, deixando em aberto se v é ancestral de w. Seja u' qualquer descendente de u (com possivelmente u' = u). Suponha que todo descendente de v possui uma aresta de retorno para um ou outro ancestral próprio de v. Portanto, há uma aresta (u', v') para algum ancestral próprio v' de v. Dada a aresta (u', v'), existe um caminho não-dirigido u'→v' que não passa por v, e portanto existe um caminho não-dirigido u→v'que não passa por v. Dado que v' ∈ V(DFT), e sendo v' ancestral de v, existe um caminho não-dirigido s→v' que não passa por v. Portanto, concatenando os caminhos não-dirigidos u→v' e s→v' que não passam por v, obtemos o caminho u→s que não passa por v. Se v também for ancestral de w, um raciocínio análogo nós fará concluir que existe um caminho w→s que não passa por v, e podemos concatenar com o caminho u→s para obter o caminho não-dirigido u→w que não passa por v, contradizendo a hipótese de que v é um ponto de articulação que separa u e w. Já se v não é ancestral de w, então w é ancestral de v (pois o G é conexo e não-dirigido), de forma que existe um caminho não-dirigido s→w que não passa por v, e a mesma conclusão se segue. Portanto, não é o caso que todo descendente de v possui uma aresta de retorno. para um ancestral de v.

.........

[22-3]
a)
- Ida: Suponha que G possui um percurso de Euler. Para qualquer vértice exceto o primeiro do percurso (que é idêntico ao último por tratar-se de um ciclo), toda vez que se percorre uma aresta que incide um vértice, no passo posterior se percorre uma aresta que incide do vértice, de modo que o número de arestas de entrada e de saída percorridas de cada vértice são sempre iguais para cada vértice. Como ao final todas as arestas de todos os vértices foram percorridas, os graus de entrada e de saída dos vértices são todos iguais para cada vértice. Falta considerar o vértice de início: no início se percorre um vértice que incide do vértice, no final se percorre uma aresta que incide no vértice, e no restante do percurso se percore um número igual de arestas que incidem no e do vértice inicial, de modo que seus graus de entrada e de saída são iguais também.
- Volta: Suponha que os graus de entrada e de saída de cada vértice em G são iguais. Provaremos por indução fraca que existe um percurso que passa exatamente uma vez por cada aresta, ou seja, um percurso de Eulerum percurso de Euler existe. A indução será sobre o número N de arestas percorridas. Começaremos com um caso base que pressupõe |V(G)| > 1, visto que o caso que |V(G)| = 1 trivialmente comporta um percurso de Euler.
– – Base: N = 0. Partindo de qualquer vértice inicial v ∈ V(G), é possível construir um caminho de comprimento N = 1, visto que G é fortemente conexo e portanto existe um caminho de v para pelo menos um outro vértice, e trivialmente esse caminho não repete arestas.
— — Hipótese de indução: N = k < |E|. Partindo de qualquer vértice inicial v ∈ V(G), é possível construir um caminho de comprimento N = k que não repete arestas.
– – Passo indutivo: Seja C um caminho de comprimento N = k < |E| que não repete arestas, iniciado em v ∈ V(G) e terminado em v' ∈ V(G). Se v' ≠ v, então o número de entradas exploradas é uma unidade maior do que o número de saídas exploradas, pois ao longo do percurso cada entrada é sucedida de uma saída, e a última ocorrencia em C foi uma entrada em v'. Como gr+(v') = gr–(v'), se segue que há uma saída de v' e podemos construir um caminho de comprimento k+1 que não repete arestas. Agora suponha que v' = v. Há portanto um número par de entradas e saídas para cada vértice ocorrente em C, incluindo v. Se toda aresta foi explorada, temos o que almejávamos. Se existem arestas não-exploradas então, dado que G é fortemente conexo, então existe um vértice v'' em C que ainda possui um número igual e não-nulo de entradas e saídas. Podemos então aplicar o mesmo raciocínio para gerar um caminho que tamanho arbitrário que comece e termine em v'' e não repita arestas, e inserimos esse caminho C' todo em C, da forma C = C[v, ..., v''] + C' + C[v'', ..., v]. Assim sucessivamente, até acabarem as arestas. [Imperfeito]

........

[22-4]
Aplique DFS(G), gerando uma floresta F com k = [1, ···, |V|] árvores em profundidade em tempo O(V+E). Então inverta F, obtendo F_T em tempo O(V+E). Então aplique uma versão modificada de DFS sobre F_T. Na versão modificada, todos os vértices sao inicializados com v.min = 0. Então, os vértices são percorridos no loop principal em ordem crescente de seu valor L. Para todo vértice encontrado na busca em profundidade começando do vetor de número l, se atribui v.min = l caso v.min == 0. Caso se encontre um vértice com valor l' < l, a busca é encerrada para o vértice l. Assim, cada aresta será precorrida apenas uma vez, e o algoritmo termina em tempo O(V+E).			
			